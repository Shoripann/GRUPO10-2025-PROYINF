-- 1.tabla colegios 
CREATE TABLE IF NOT EXISTS colegios (
     id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    region VARCHAR(100) NOT NULL,
    direccion TEXT NOT NULL
);

-- 2. tabla profesores 
CREATE TABLE IF NOT EXISTS profesores (
     id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    asignatura VARCHAR(100)
);

-- 3.tabla cursos 
CREATE TABLE IF NOT EXISTS cursos (
     id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    letra CHAR(1),
    profesor_id INT REFERENCES profesores(id) ON DELETE SET NULL
);

-- 4.tabla alumnos
CREATE TABLE IF NOT EXISTS alumnos (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    curso_id INT REFERENCES cursos(id) ON DELETE SET NULL,
    colegio_id INT REFERENCES colegios(id) ON DELETE SET NULL
);

-- 5.  tabla ensayos
CREATE TABLE IF NOT EXISTS ensayos (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    titulo VARCHAR(200) NOT NULL,
    fecha DATE NOT NULL DEFAULT CURRENT_DATE,
    asignatura VARCHAR(100),
    num_preguntas INT,
    puntaje DECIMAL(5,2) DEFAULT 0 CHECK (puntaje >= 0 AND puntaje <= 100),
    tiempo_minutos INT,
    curso_id INT REFERENCES cursos(id) ON DELETE SET NULL
);

-- 6. tabla preguntas 
CREATE TABLE IF NOT EXISTS preguntas (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    texto TEXT NOT NULL,
    dificultad VARCHAR(20),
    materia VARCHAR(100),
    profesor_id INT REFERENCES profesores(id) ON DELETE SET NULL,
    es_banco BOOLEAN NOT NULL DEFAULT false
);

-- 7.tabla opciones 
CREATE TABLE IF NOT EXISTS opciones (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pregunta_id INT NOT NULL REFERENCES preguntas(id) ON DELETE CASCADE,
    texto VARCHAR(255) NOT NULL,
    es_correcta BOOLEAN DEFAULT FALSE
);

-- 8.  tabla ensayo_pregunta 
CREATE TABLE IF NOT EXISTS ensayo_pregunta (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ensayo_id INT NOT NULL REFERENCES ensayos(id) ON DELETE CASCADE,
    pregunta_id INT NOT NULL REFERENCES preguntas(id) ON DELETE CASCADE,
    UNIQUE (ensayo_id, pregunta_id)
);


-- 9. tabla resultados 
CREATE TABLE IF NOT EXISTS resultados (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ensayo_id INT NOT NULL REFERENCES ensayos(id) ON DELETE CASCADE,
    alumno_id INT NOT NULL REFERENCES alumnos(id) ON DELETE CASCADE,
    puntaje DECIMAL(5,2),
    fecha DATE DEFAULT CURRENT_DATE
);

INSERT INTO profesores (id, nombre, email, password, asignatura)
VALUES (1, 'Profesor', 'profesor@profesor.com', 'profesor', 'Matematicas')
ON CONFLICT (id) DO NOTHING;

INSERT INTO cursos(id,nombre,letra,profesor_id)
VALUES(1,'primero','a',1);

INSERT INTO cursos(id,nombre,letra,profesor_id)
VALUES(2,'cuarto','b',1);

INSERT INTO alumnos (id, nombre, email, password,curso_id)
VALUES (1,'Camilo Estudiante', 'camilo@ejemplo.com', '1234',1)
ON CONFLICT (id) DO NOTHING;

INSERT INTO alumnos (id, nombre, email, password,curso_id)
VALUES (2,'Gabriel la eminencia', 'gabriel@gabriel.com', 'gabriel',2)
ON CONFLICT (id) DO NOTHING;

ALTER TABLE resultados
ADD COLUMN IF NOT EXISTS respuestas JSONB;

-- Crear un ensayo de prueba
INSERT INTO ensayos (id, titulo, asignatura, num_preguntas, tiempo_minutos, curso_id)
VALUES (1, 'Ensayo Diagnóstico PAES Matemáticas', 'Matemáticas', 3, 45, 1)
ON CONFLICT (id) DO NOTHING;

--Crear preguntas (enlazadas al profesor id=1)
INSERT INTO preguntas (id, texto, dificultad, materia, profesor_id, es_banco)
VALUES
(1, '¿Cuál es el resultado de 2 + 3 × 4?', 'Fácil', 'Matemáticas', 1, true),
(2, 'Si f(x) = 2x + 5, ¿cuál es el valor de f(3)?', 'Media', 'Matemáticas', 1, true),
(3, '¿Cuál de los siguientes es un número primo?', 'Fácil', 'Matemáticas', 1, true)
ON CONFLICT (id) DO NOTHING;

-- Crear opciones para cada pregunta
INSERT INTO opciones (pregunta_id, texto, es_correcta)
VALUES
-- P1
(1, '14', false),
(1, '20', true),
(1, '10', false),
(1, '12', false),
-- P2
(2, '10', false),
(2, '11', true),
(2, '15', false),
(2, '9', false),
-- P3
(3, '4', false),
(3, '7', true),
(3, '9', false),
(3, '6', false);

-- Vincular las preguntas al ensayo
INSERT INTO ensayo_pregunta (ensayo_id, pregunta_id)
VALUES
(1, 1),
(1, 2),
(1, 3)
ON CONFLICT DO NOTHING;

--  Crear resultado simulado (ensayo resuelto)
INSERT INTO resultados (ensayo_id, alumno_id, puntaje, respuestas)
VALUES
(1, 1, 85.50, '{
  "1": "20",
  "2": "11",
  "3": "7"
}');